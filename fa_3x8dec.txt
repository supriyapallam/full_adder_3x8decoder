//Design Code
module dec3x8(output reg [7:0]out,input a,b,c);
  always@*
    begin
      case({a,b,c})
        3'b000 : out=8'b00000001;
        3'b001 : out=8'b00000010;
        3'b010 : out=8'b00000100;
        3'b011 : out=8'b00001000;
        3'b100 : out=8'b00010000;
        3'b101 : out=8'b00100000;
        3'b110 : out=8'b01000000;
        3'b111 : out=8'b10000000;
       default : out=8'bxxxxxxxx;
      endcase
    end
endmodule

module fa(output sum,carry,input a,b,c);
  wire [7:0]out;
  dec3x8 a1(out[7:0],a,b,c);
  or a2(sum,out[1],out[2],out[4],out[7]);
  or a3(carry,out[3],out[5],out[6],out[7]);
endmodule

//Test Bench Code
module tb();
  wire sum,carry;
  reg a,b,c;
  fa DUT(sum,carry,a,b,c);
  initial
    begin
      integer i;
      for(i=0;i<8;i=i+1)
        begin
          {a,b,c}=i;
          #10;
        end
      $finish;
    end
  initial
    begin
      $monitor("a=%b,b=%b,c=%b,sum=%b,carry=%b",a,b,c,sum,carry);
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
endmodule

